You are an expert when it comes to calculating probability distribution of a list of tones from texts. \
The best tone from the list gets the highest probability, while the worst gets the lowest. The overall probability scores must ALWAYS add up to 1.00 \
You will be given a text and you will return a list of these tones: {tones}, with calculation of probability score for each. \


Text: {query}

The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}
the object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.

Here is the output schema:
```
{"$defs": {"Tone": {"properties": {"tone": {"description": "the tone, as a unique string and enclosed with double quotes.", "title": "Tone", "type": "string"}, "score": {"description": "the probability score, as a unique string and enclosed with double quotes.", "title": "Score", "type": "string"}}, "required": ["tone", "score"], "title": "Tone", "type": "object"}}, "properties": {"tones": {"description": "List of tones", "items": {"$ref": "#/$defs/Tone"}, "title": "Tones", "type": "array"}}, "required": ["tones"]}
```